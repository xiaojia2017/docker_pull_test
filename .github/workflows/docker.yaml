name: Aliyun Image Push

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: "crpi-qdxa7r1jpsbtqqwp.cn-shenzhen.personal.cr.aliyuncs.com"
  ALIYUN_NAMESPACE: "docker20250406/k8s"  # 格式：<命名空间>/<仓库名称>
  ALIYUN_USER: "${{ secrets.ALIYUN_USER }}"          # 阿里云账号（邮箱格式）
  ALIYUN_PASSWORD: "${{ secrets.ALIYUN_PASSWORD }}"  # 阿里云密码

jobs:
  push-image:
    name: Push to Aliyun
    runs-on: ubuntu-latest

    steps:
    # ========== 1. 准备Docker环境 ==========
    - name: Setup Docker
      run: |
        sudo systemctl stop docker
        sudo rm -rf /var/lib/docker/*
        sudo systemctl start docker
        docker version

    # ========== 2. 登录阿里云镜像仓库 ==========
    - name: Login to Aliyun
      run: |
        echo "$ALIYUN_PASSWORD" | docker login \
          -u $ALIYUN_USER \
          --password-stdin $ALIYUN_REGISTRY

    # ========== 3. 检出镜像列表文件 ==========
    - name: Checkout Code
      uses: actions/checkout@v4

    # ========== 4. 镜像处理核心逻辑 ==========
    - name: Process Images
      run: |
        while IFS= read -r line; do
          # 跳过注释和空行
          [[ -z "$line" ]] || [[ "$line" =~ ^# ]] && continue

          # 解析原始镜像信息
          src_image=$(echo "$line" | awk '{print $NF}' | cut -d@ -f1)
          tag=$(echo "$src_image" | awk -F: '{print $2}')
          image_name=$(echo "$src_image" | awk -F: '{print $1}')

          # 生成阿里云镜像路径（严格遵循官方格式）
          target_image="$ALIYUN_REGISTRY/$ALIYUN_NAMESPACE:${tag}"
          
          # 显示操作信息
          echo "====== 正在推送: $src_image => $target_image ======"

          # 拉取镜像
          docker pull $src_image

          # 打标签
          docker tag $src_image $target_image

          # 推送镜像（带3次重试）
          for i in {1..3}; do
            docker push $target_image && break || sleep 10
          done

          # 清理镜像
          docker rmi $src_image $target_image || true

        done < ./images.txt

    # ========== 5. 最终清理 ==========
    - name: Cleanup
      run: |
        docker system prune -af
        echo "===== 磁盘状态 ====="
        df -hT
