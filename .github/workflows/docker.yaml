- name: Process and Push Images
  run: |
    # ========== 路径配置与验证 ==========
    # 原始环境变量值输出（用于调试）
    echo "原始环境变量："
    echo "ALIYUN_REGISTRY=${{ env.ALIYUN_REGISTRY }}"
    echo "ALIYUN_NAMESPACE=${{ env.ALIYUN_NAMESPACE }}"
    echo "ALIYUN_REPO_NAME=${{ env.ALIYUN_REPO_NAME }}"

    # 定义目标路径并清理多余斜杠
    TARGET_PREFIX="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_REPO_NAME }}"
    TARGET_PREFIX=$(echo "$TARGET_PREFIX" | sed 's|//|/|g')  # 强制替换双斜杠
    echo "生成的目标前缀：TARGET_PREFIX=${TARGET_PREFIX}"

    # ========== 镜像处理逻辑 ==========
    while IFS= read -r line; do
      [[ -z "$line" ]] || [[ "$line" =~ ^# ]] && continue

      # 提取平台参数
      platform_arg=$(echo "$line" | sed -n 's/.*--platform \([^ ]*\).*/\1/p')
      original_line=$(echo "$line" | sed 's/--platform [^ ]*//')

      # 解析原始镜像名称（保留完整来源）
      src_image=$(echo "$original_line" | awk '{print $NF}' | sed 's/@sha256:.*//')
      echo "原始镜像名称：src_image=${src_image}"

      # 分离镜像名和标签（严格分隔）
      image_name=$(echo "$src_image" | awk -F: '{print $1}')
      image_tag=$(echo "$src_image" | awk -F: '{print $2}')
      echo "解析结果：image_name=${image_name}, image_tag=${image_tag}"

      # 转换镜像名称（仅替换非法字符）
      converted_name=$(echo "$image_name" | sed 's|[:@]|-|g')  # 仅替换冒号和@
      safe_image_tag=$(echo "$image_tag" | sed 's|[/:@]|-|g')  # 替换/、:、@为-
      echo "转换后名称：converted_name=${converted_name}, safe_image_tag=${safe_image_tag}"

      # 生成最终镜像名称（保留层级结构）
      final_image="${converted_name}:${safe_image_tag}"  # 使用标准冒号分隔

      # 添加平台后缀
      if [ -n "$platform_arg" ]; then
        platform_suffix="-$(echo "$platform_arg" | tr '/' '_')"
        final_image="${final_image}${platform_suffix}"
      fi

      # 生成完整目标路径（强制打印未脱敏）
      target_image="${TARGET_PREFIX}:${final_image}"
      echo "完整推送路径：target_image=${target_image}"  # 关键！显示完整路径

      # 执行Docker操作
      docker pull "$src_image"
      docker tag "$src_image" "$target_image"
      docker push "$target_image"
      docker rmi "$src_image" "$target_image" || true

    done < ./images.txt
